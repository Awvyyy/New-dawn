extends Node3D

@onready var player = get_node_or_null("/root/Node3D/Player")
@onready var hud = get_node_or_null("/root/Node3D/HUD")

var recipes = {
	"campfire": {
		"requirements": {"wood": 10, "stone": 5},
		"scene": preload("res://Scenes/buildings/Campfire.tscn")
	},
	"workbench": {
		"requirements": {"wood": 15, "metal": 10},
		"scene": preload("res://Scenes/buildings/Workbench.tscn")
	}
}

var resource_manager = null


func _ready():
	if Engine.has_singleton("ResourceManager"):
		resource_manager = Engine.get_singleton("ResourceManager")
	else:
		resource_manager = get_node_or_null("/root/ResourceManager")

	print("‚úÖ CraftingManager initialized")


# ========================
# üî® –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –∫—Ä–∞—Ñ—Ç–∞
# ========================
func craft_item(item_name: String) -> void:
	if not recipes.has(item_name):
		push_warning("‚ö†Ô∏è –ù–µ—Ç —Ä–µ—Ü–µ–ø—Ç–∞ –¥–ª—è: " + item_name)
		return

	var recipe = recipes[item_name]
	var requirements = recipe["requirements"]

	# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
	for res_type in requirements.keys():
		if resource_manager.get_resource(res_type) < requirements[res_type]:
			_show_notification("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ " + res_type)
			return

	# –í—ã—á–∏—Ç–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã
	for res_type in requirements.keys():
		resource_manager.add_resource(res_type, -requirements[res_type])

	# –ó–∞–¥–∞—ë–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Ç–æ—á–∫—É —Å–ø–∞–≤–Ω–∞
	var spawn_pos = Vector3(-8, 0, 5)

	# –°–æ–∑–¥–∞—ë–º –ø—Ä–µ–¥–º–µ—Ç
	_spawn_crafted_item(item_name, spawn_pos)

	# –í–∏–∑—É–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
	_show_notification("üî• –°–∫—Ä–∞—Ñ—á–µ–Ω " + item_name.capitalize() + "!")


# ========================
# üß± –°–ø–∞–≤–Ω –ø—Ä–µ–¥–º–µ—Ç–∞ (—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è)
# ========================
func _spawn_crafted_item(item_name: String, spawn_pos: Vector3) -> void:
	if not recipes.has(item_name):
		print("‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞:", item_name)
		return

	var recipe = recipes[item_name]
	var scene = recipe.get("scene")
	if scene == null:
		print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Ü–µ–Ω–∞ –¥–ª—è:", item_name)
		return

	# === –ò–Ω—Å—Ç–∞–Ω—Ü–∏—Ä—É–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞–ø—Ä—è–º—É—é –≤ –∫–æ—Ä–µ–Ω—å ===
	var inst = scene.instantiate()
	var world_root = get_tree().root.get_child(0)
	world_root.add_child(inst)
	print("üì¶ –†–æ–¥–∏—Ç–µ–ª—å –≤–µ—Ä—Å—Ç–∞–∫–∞:", inst.get_parent().get_path())


	# === –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é ===
	inst.global_position = spawn_pos
	print("üî• –°–æ–∑–¥–∞–Ω –æ–±—ä–µ–∫—Ç:", item_name, "–≤ –ø–æ–∑–∏—Ü–∏–∏", inst.global_position)

	# === –≠—Ñ—Ñ–µ–∫—Ç –ø–æ—è–≤–ª–µ–Ω–∏—è ===
	var tween = create_tween()
	inst.scale = Vector3(0.1, 0.1, 0.1)
	tween.tween_property(inst, "scale", Vector3.ONE, 0.5).set_trans(Tween.TRANS_SINE).set_ease(Tween.EASE_OUT)

	# === –°–≤–µ—Ç–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç ===
	var light = OmniLight3D.new()
	light.light_color = Color(1, 0.8, 0.4)
	light.light_energy = 2.5
	inst.add_child(light)

	var lt_tween = create_tween()
	lt_tween.tween_property(light, "light_energy", 0.0, 1.0)
	lt_tween.finished.connect(func(): light.queue_free())

	# === –ó–≤—É–∫ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å —Ñ–∞–π–ª) ===
	if ResourceLoader.exists("res://sounds/build.wav"):
		var sfx = AudioStreamPlayer3D.new()
		sfx.stream = load("res://sounds/build.wav")
		sfx.global_position = spawn_pos
		world_root.add_child(sfx)
		sfx.play()

	# === –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç on_crafted() ===
	if inst.has_method("on_crafted"):
		inst.on_crafted()

	print("‚úÖ –û–±—ä–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω –≤ –º–∏—Ä–µ:", inst.name)


# ========================
# üí¨ –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
# ========================
func _show_notification(text: String) -> void:
	if hud and hud.has_method("show_message"):
		hud.show_message(text)
	else:
		var label = Label3D.new()
		label.text = text
		label.modulate = Color(1, 1, 0)
		label.billboard = BaseMaterial3D.BILLBOARD_ENABLED
		get_tree().root.get_child(0).add_child(label)

		if player:
			label.global_position = player.global_position + Vector3(0, 2.0, 0)
		else:
			label.global_position = Vector3(0, 2.0, 0)

		var tween = create_tween()
		tween.tween_property(label, "position:y", label.position.y + 1.0, 1.0)
		tween.tween_property(label, "modulate:a", 0.0, 1.0)
		await tween.finished
		label.queue_free()
